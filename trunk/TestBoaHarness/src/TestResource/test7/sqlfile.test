[default]
calltest: setup
calltest: main
calltest: test1
calltest: test2
calltest: test3
calltest: test4
calltest: test5
calltest: test6

[main]
sql:DELETE FROM MESS
sql:INSERT INTO MESS VALUES('aaaaa')
sql:INSERT INTO MESS VALUES('bbbbb')
sql:INSERT INTO MESS VALUES('ccccc')
sql:INSERT INTO MESS VALUES('fffff')
commit:
sql: BEGIN
 DECLARE C INTEGER;
 CALL COUNTMESS(C);
 DELETE FROM PROCRESTABLE;
 INSERT INTO PROCRESTABLE VALUES(C);
 COMMIT;
END
verify: SELECT * FROM PROCRESTABLE
equal RES1 4
eof
--------------------------------------------------
verify: SELECT * FROM MESS ORDER BY M
equal M aaaaa
sql: DELETE FROM TEST
sql: INSERT INTO TEST VALUES('a b')
verify: SELECT TRIM(SSS) AS SSS FROM TEST
equal SSS a\ b
--------------------------------------------------
sql: DELETE FROM TEST1 
sql: INSERT INTO TEST1 VALUES('abd',55)
verify: SELECT * FROM TEST1
equal sss abd,equal num 55
print: check date
----------------------------------------------------
sql: DELETE FROM TEST2
sql: INSERT INTO TEST2 VALUES('2012-01-01')
verify: SELECT * FROM TEST2
equal dt 2012-01-01, isnotnull dt
----------------------------------------------------
sql: DELETE FROM TEST2
sql: INSERT INTO TEST2 VALUES(NULL)
verify: SELECT * FROM TEST2
isnull dt 
----------------------------------------------------
sqlexception(75000): { CALL MYSIGNAL('message') } 
------------------------------------------
sql(rrrrr): INSERT INTO MESS VALUES(?)
commit:
verify: SELECT COUNT(*) AS C FROM MESS
equal C 5 
-----------------------------------------
sql: DELETE FROM TEST1
sql(name 5): INSERT INTO TEST1 VALUES(?,?)

[test1]
sqlexception: CREATE TABLE MESS (M VARCHAR(100))
sql: DELETE FROM MESS
sql: INSERT INTO MESS VALUES('aaaa')
sql: INSERT INTO MESS VALUES('bbbb')
verify: SELECT COUNT(*) AS C FROM MESS
equal C 2

[test2]
sqlexception(42S01): CREATE TABLE MESS (M VARCHAR(100))
sql: DELETE FROM MESS
sql: INSERT INTO MESS VALUES('aaaa')
sql: INSERT INTO MESS VALUES('bbbb')
verify: SELECT * FROM MESS ORDER BY M
isnotnull M
equal M bbbb
eof
[test3]
sql: DELETE FROM MESS
sql: { CALL LOGMESS('Next successfull step') }
sql: CALL LOGMESS('Another method') 
verify: SELECT * FROM MESS
isnotnull M
isnotnull M
eof
[test4]
calltest: test3
sqlexception: CREATE TABLE PROCRESTABLE (RES1 BIGINT)
sql: BEGIN ATOMIC
 DECLARE C INTEGER;
 CALL COUNTMESS(C);
 DELETE FROM PROCRESTABLE;
 INSERT INTO PROCRESTABLE VALUES(C);
END
verify: SELECT * FROM PROCRESTABLE
equal RES1 2
eof

[test5]
sql: CALL THROWSIGNAL(NULL); 
sqlexception(75000): CALL THROWSIGNAL('Terrible error');
sqlexception(75000): CALL THROWSIGNAL(NULL);
sqlexceptionexpected(75000): CALL THROWSIGNAL('Terrible error');
print: This test should fail 
--sqlexceptionexpected(75000): CALL THROWSIGNAL(NULL); 

[test6]
--sql: { ? = CALL ADDNUMBER(5,4); }
sql: BEGIN
  DECLARE SUM INTEGER;
  DELETE FROM PROCRESTABLE;
  SET SUM = ADDNUMBER(4,5);
  INSERT INTO PROCRESTABLE VALUES(SUM);
  INSERT INTO PROCRESTABLE VALUES(ADDNUMBER(2,2));
END
verify: SELECT * FROM PROCRESTABLE ORDER BY RES1
equal RES1 4
equal RES1 9
eof
