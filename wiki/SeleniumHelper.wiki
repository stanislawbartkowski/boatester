Add-on to BoaTester supporting selenium based test of web applications.

<wiki:toc max_depth="2" />

= Introduction =

Selenium: http://seleniumhq.org/ is grown-up and well known framework for testing web applications. During my work with that framework I came to the conclusion that test steps written as sequence of python statement is not a good idea and decided to create a simple extension to the selenium which replaces this part of test with simple text file.

= General idea ==

== Test steps ==

The purpose is to replace sequence of python statements like:
{{{
        self.assertTrue(sel.is_element_present("id=ACCEPT"),"Element not found")
        self.assertTrue(sel.is_element_present("xpath=//option[@value='hotel']"),"Element not found")
        sel.click("id=ACCEPT")
        sel.type("PASSWORD", "osoba")
        sel.type("LOGINNAME, "osoba")
        sel.click("id=ACCEPT")
        self.assertTrue(sel.is_element_present("xpath=//td[@class='user']//div[text()='osoba']"),"Element not found"
 }}}

with something like (lines from text file):
{{{
[testcase1]
waitFor : #ACCEPT
waitFor : xpath=//option[@value='hotel']|20
-- Test Case 1
-- Click on 'Accept' and error 'Login name is empty' is expected
click : #ACCEPT
mouseOver : #PASSWORD
-- Test Case 2
-- enter osoba and osoba as login name and password and click 'Accept'
-- login should be done and 'osoba' login name should appeat at the top panel
type : #LOGINNAME|osoba
type : #PASSWORD|osoba
click : #ACCEPT
waitFor : xpath=//td[@class='user']//div[text()='osoba']
}}}

and python statement:

{{{
   runtest['testcase']
}}}

== Aliases ==

Some elements (for instance button) are used more than one time. So aliases are necessary in order to avoid typing exact element selector (for instance "id=ACCEPT") and use alias name (#ACCEPT) instead. No problem with simple selector identifier but in case of complicated identifier ("xpath=//div[2][text='aaa']//td ...") it could save time and lower the risk of inproper typing. Also in case of changing the element identifiers - very likely after changing the screen layout - it is enough to change only the alias definition thus leaving the test steps related to this element unchanged.

== Common elements ==

Very often test cases are sharing some common test elements and definitions. For instance:

Test Case 1:
{{{
Login to the application
Run test scenario 1
}}}

Test Case 2:
{{{
Login to the application
Run test scenario 2
}}}

In order to avoid duplicating the same login sequence it is necessary to create a simple 'common' 



= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages